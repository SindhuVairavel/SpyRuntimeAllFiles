2015-11-17 13:30:12,894 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView : null }  ==StorageServiceClientView() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:12,895 [main] INFO  Spy.Bem.Miner - (I) Term Size: 0/6; states: 2/4; Terms: 1; VisitedConcreteStates 0
2015-11-17 13:30:12,895 [main] INFO  Spy.Bem.Miner - (I) CompleteStates: 1
2015-11-17 13:30:13,154 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==close() ==>{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:13,364 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==finish() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:13,507 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==hashCode() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:13,662 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==putNextEntry(ee).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:13,839 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==putNextEntry(ff).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:14,051 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==unbind() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:14,192 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==write([120]).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:14,193 [main] DEBUG Spy.Bem.Miner - (I) new Terms: 7
2015-11-17 13:30:14,197 [main] INFO  Spy.Bem.Miner - (I) Term Size: 2/6; states: 6/4; Terms: 7; VisitedConcreteStates 7
2015-11-17 13:30:14,198 [main] INFO  Spy.Bem.Miner - (I) CompleteStates: 2
2015-11-17 13:30:14,400 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed } ==close() ==>{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:14,544 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed } ==finish() ==>{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:14,718 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed } ==hashCode() ==>{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:14,908 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed } ==putNextEntry(ee).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:15,090 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed } ==putNextEntry(ff).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:15,265 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed } ==unbind() ==>{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:15,468 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed } ==write([120]).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:15,621 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==close() ==>{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:15,772 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==finish() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:15,922 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==hashCode() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:16,034 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==putNextEntry(ee).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:16,137 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==putNextEntry(ff).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:16,285 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==unbind() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:16,504 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==write([120]).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:16,649 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==close() ==>{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:16,746 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==finish() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:16,852 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==hashCode() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:17,007 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==putNextEntry(ee).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:17,113 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==putNextEntry(ff).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:17,219 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==unbind() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:17,436 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==write([120]).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:17,544 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null } ==close() ==>{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:17,639 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null } ==finish() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:17,722 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null } ==hashCode() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:17,928 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null } ==putNextEntry(ee).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:18,085 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null } ==putNextEntry(ff).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:18,320 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null } ==unbind() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval == null }
2015-11-17 13:30:18,504 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null } ==write([120]).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:18,673 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null } ==close() ==>{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:18,804 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null } ==finish() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:18,897 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null } ==hashCode() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:19,020 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null } ==putNextEntry(ee).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:19,256 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null } ==putNextEntry(ff).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:19,371 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null } ==unbind() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval throws storageServer.InstanceException & write([120]).retval == null }
2015-11-17 13:30:19,534 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null } ==write([120]).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:19,696 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==close() ==>{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:19,825 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==finish() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:19,926 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==hashCode() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:20,088 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==putNextEntry(ee).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval == null }
2015-11-17 13:30:20,175 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==putNextEntry(ff).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval throws storageServer.InstanceException & write([120]).retval == null }
2015-11-17 13:30:20,345 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==unbind() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:20,478 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==write([120]).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:20,646 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==close() ==>{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:20,949 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==finish() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,081 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==hashCode() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,238 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==putNextEntry(ee).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:21,396 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==putNextEntry(ff).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:21,525 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==unbind() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,716 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==write([120]).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,716 [main] DEBUG Spy.Bem.Miner - (I) new Terms: 49
2015-11-17 13:30:21,716 [main] INFO  Spy.Bem.Miner - (I) Final model with term size: 3/6; states: 12/4; Terms: 49; VisitedConcreteStates 56
2015-11-17 13:30:21,717 [main] INFO  Spy.Bem.Miner - (I) Searching Discriminators ... 
2015-11-17 13:30:21,717 [main] DEBUG Spy.Bem.Miner - (I) Observable State: { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,717 [main] DEBUG Spy.Bem.Miner - (I) Observable State: { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,717 [main] DEBUG Spy.Bem.Miner - (I) Observable State: { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:21,717 [main] DEBUG Spy.Bem.Miner - (I) Observable State: { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,717 [main] DEBUG Spy.Bem.Miner - (I) Observable State: { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval throws storageServer.InstanceException & write([120]).retval == null }
2015-11-17 13:30:21,718 [main] DEBUG Spy.Bem.Miner - (I) Observable State: { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:21,718 [main] DEBUG Spy.Bem.Miner - (I) Observable State: { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,718 [main] DEBUG Spy.Bem.Miner - (I) Observable State: { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval == null }
2015-11-17 13:30:21,718 [main] DEBUG Spy.Bem.Miner - (I) Observable State: { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:21,718 [main] DEBUG Spy.Bem.Miner - (I) Observable State: { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:21,718 [main] DEBUG Spy.Bem.Miner - (I) Observable State: { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:21,718 [main] DEBUG Spy.Bem.Miner - (I) Observable State: { StorageServiceClientView : null } 
2015-11-17 13:30:21,742 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,742 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,742 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView : null }  ==StorageServiceClientView() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,742 [main] INFO  Spy.Bem.Miner - (I) terms: 1; size: 0 / 6; states: { complete: 1; total:2; max: 4 }; invariance counter: 4
2015-11-17 13:30:21,743 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,743 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,743 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:21,743 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:21,744 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==close() ==>{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:21,744 [main] DEBUG Spy.Bem.Miner - DISCRIMINATOR_FOUND
2015-11-17 13:30:21,744 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,744 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,744 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,744 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,744 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==finish() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,745 [main] DEBUG Spy.Bem.Miner - DISCRIMINATOR_FOUND
2015-11-17 13:30:21,745 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,745 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,745 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,745 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,745 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==hashCode() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,745 [main] DEBUG Spy.Bem.Miner - DISCRIMINATOR_FOUND
2015-11-17 13:30:21,753 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,753 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,754 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:21,754 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:21,754 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==putNextEntry(ee).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:21,754 [main] DEBUG Spy.Bem.Miner - DISCRIMINATOR_FOUND
2015-11-17 13:30:21,754 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,754 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,755 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:21,755 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:21,755 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==putNextEntry(ff).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:21,755 [main] DEBUG Spy.Bem.Miner - DISCRIMINATOR_FOUND
2015-11-17 13:30:21,755 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,755 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,755 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,755 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,755 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==unbind() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,756 [main] DEBUG Spy.Bem.Miner - DISCRIMINATOR_FOUND
2015-11-17 13:30:21,768 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,769 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,769 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()write([120]) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,769 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()write([120]) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,769 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==write([120]).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,770 [main] DEBUG Spy.Bem.Miner - DISCRIMINATOR_FOUND
2015-11-17 13:30:21,770 [main] DEBUG Spy.Bem.Miner - Complete States: 2 / 6
2015-11-17 13:30:21,770 [main] INFO  Spy.Bem.Miner - (I) terms: 7; size: 2 / 6; states: { complete: 2; total:6; max: 4 }; invariance counter: 3
2015-11-17 13:30:21,771 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:21,771 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:21,771 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()close() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:21,771 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()close() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:21,771 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed } ==close() ==>{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:21,771 [main] DEBUG Spy.Bem.Miner - DISCRIMINATOR_FOUND
2015-11-17 13:30:21,772 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:21,772 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:21,772 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()finish() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:21,772 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()finish() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:21,772 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed } ==finish() ==>{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:21,772 [main] DEBUG Spy.Bem.Miner - DISCRIMINATOR_FOUND
2015-11-17 13:30:21,793 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:21,793 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:21,793 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()hashCode() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:21,793 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()hashCode() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:21,794 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed } ==hashCode() ==>{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:21,794 [main] DEBUG Spy.Bem.Miner - DISCRIMINATOR_FOUND
2015-11-17 13:30:21,794 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:21,794 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:21,794 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:21,794 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:21,794 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed } ==putNextEntry(ee).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:21,794 [main] DEBUG Spy.Bem.Miner - DISCRIMINATOR_FOUND
2015-11-17 13:30:21,795 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:21,795 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:21,803 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:21,804 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:21,804 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed } ==putNextEntry(ff).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:21,804 [main] DEBUG Spy.Bem.Miner - DISCRIMINATOR_FOUND
2015-11-17 13:30:21,804 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:21,804 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:21,805 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:21,805 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:21,805 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed } ==unbind() ==>{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:21,805 [main] DEBUG Spy.Bem.Miner - DISCRIMINATOR_FOUND
2015-11-17 13:30:21,805 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:21,805 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:21,820 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()write([120]) to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:21,820 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()write([120]) to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:21,820 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed } ==write([120]).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:21,820 [main] DEBUG Spy.Bem.Miner - DISCRIMINATOR_FOUND
2015-11-17 13:30:21,820 [main] DEBUG Spy.Bem.Miner - Complete States: 3 / 7
2015-11-17 13:30:21,821 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,821 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,821 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish()close() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:21,821 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish()close() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:21,822 [main] DEBUG Spy.Bem.Miner - REOBSERVED_BEHAVIOR
2015-11-17 13:30:21,822 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,822 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,822 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish()finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,822 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish()finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,822 [main] DEBUG Spy.Bem.Miner - REOBSERVED_BEHAVIOR
2015-11-17 13:30:21,823 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,823 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,823 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish()hashCode() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,823 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish()hashCode() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,872 [main] DEBUG Spy.Bem.Miner - REOBSERVED_BEHAVIOR
2015-11-17 13:30:21,872 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,872 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,872 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish()putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:21,872 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish()putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:21,872 [main] DEBUG Spy.Bem.Miner - REOBSERVED_BEHAVIOR
2015-11-17 13:30:21,873 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,873 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,873 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish()putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:21,873 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish()putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:21,879 [main] DEBUG Spy.Bem.Miner - REOBSERVED_BEHAVIOR
2015-11-17 13:30:21,879 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,879 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,879 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,879 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,879 [main] DEBUG Spy.Bem.Miner - REOBSERVED_BEHAVIOR
2015-11-17 13:30:21,880 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,880 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,880 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish()write([120]) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,880 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish()write([120]) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,880 [main] DEBUG Spy.Bem.Miner - REOBSERVED_BEHAVIOR
2015-11-17 13:30:21,880 [main] DEBUG Spy.Bem.Miner - Complete States: 3 / 7
2015-11-17 13:30:21,881 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,881 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,881 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode()close() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:21,881 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode()close() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:21,881 [main] DEBUG Spy.Bem.Miner - REOBSERVED_BEHAVIOR
2015-11-17 13:30:21,881 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,881 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,890 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode()finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,904 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode()finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,904 [main] DEBUG Spy.Bem.Miner - REOBSERVED_BEHAVIOR
2015-11-17 13:30:21,905 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,905 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,905 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode()hashCode() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,905 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode()hashCode() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,905 [main] DEBUG Spy.Bem.Miner - REOBSERVED_BEHAVIOR
2015-11-17 13:30:21,905 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,905 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,905 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode()putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:21,905 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode()putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:21,905 [main] DEBUG Spy.Bem.Miner - REOBSERVED_BEHAVIOR
2015-11-17 13:30:21,914 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,915 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,915 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode()putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:21,915 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode()putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:21,915 [main] DEBUG Spy.Bem.Miner - REOBSERVED_BEHAVIOR
2015-11-17 13:30:21,916 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,916 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,916 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,916 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,916 [main] DEBUG Spy.Bem.Miner - REOBSERVED_BEHAVIOR
2015-11-17 13:30:21,916 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,916 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,917 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode()write([120]) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,917 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode()write([120]) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,917 [main] DEBUG Spy.Bem.Miner - REOBSERVED_BEHAVIOR
2015-11-17 13:30:21,917 [main] DEBUG Spy.Bem.Miner - Complete States: 3 / 7
2015-11-17 13:30:21,922 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:21,922 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:21,923 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)close() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:21,923 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)close() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:21,923 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null } ==close() ==>{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:21,923 [main] DEBUG Spy.Bem.Miner - DISCRIMINATOR_FOUND
2015-11-17 13:30:21,923 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:21,923 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:21,924 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,924 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,924 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null } ==finish() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,924 [main] DEBUG Spy.Bem.Miner - DISCRIMINATOR_FOUND
2015-11-17 13:30:21,924 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:21,924 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:21,924 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)hashCode() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:21,924 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)hashCode() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:21,924 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null } ==hashCode() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:21,924 [main] DEBUG Spy.Bem.Miner - DISCRIMINATOR_FOUND
2015-11-17 13:30:21,925 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:21,925 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:21,925 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,925 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,925 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null } ==putNextEntry(ee).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:21,925 [main] DEBUG Spy.Bem.Miner - DISCRIMINATOR_FOUND
2015-11-17 13:30:21,938 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:21,942 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:21,942 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:21,942 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:21,942 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null } ==putNextEntry(ff).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:21,942 [main] DEBUG Spy.Bem.Miner - DISCRIMINATOR_FOUND
2015-11-17 13:30:21,942 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:21,942 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:21,943 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval == null }
2015-11-17 13:30:21,943 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval == null }
2015-11-17 13:30:21,943 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null } ==unbind() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval == null }
2015-11-17 13:30:21,943 [main] DEBUG Spy.Bem.Miner - DISCRIMINATOR_FOUND
2015-11-17 13:30:21,943 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:21,943 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:21,943 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)write([120]) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:21,943 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)write([120]) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:21,943 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null } ==write([120]).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:21,943 [main] DEBUG Spy.Bem.Miner - DISCRIMINATOR_FOUND
2015-11-17 13:30:21,944 [main] DEBUG Spy.Bem.Miner - Complete States: 4
2015-11-17 13:30:21,980 [main] INFO  Spy.Bem.Miner - (W) States to purge: 0 []
2015-11-17 13:30:22,862 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView : null }  ==StorageServiceClientView() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & getCanonicalTerm().retval = StorageServiceClientView() & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:22,863 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & getCanonicalTerm().retval = StorageServiceClientView() & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==putNextEntry(ee).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & getCanonicalTerm().retval = StorageServiceClientView()putNextEntry(ee) & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:22,863 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & getCanonicalTerm().retval = StorageServiceClientView() & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==close() ==>{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & getCanonicalTerm().retval = StorageServiceClientView()close() & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:22,871 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:22,872 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:22,872 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:22,872 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:22,873 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:22,877 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:22,880 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close.behaviorVARIANT & close.retval instanceof [void] & finish.behaviorINVARIANT & finish.retval instanceof [void] & hashCode.behaviorINVARIANT & putNextEntry.behaviorVARIANT & putNextEntry.retval instanceof [void] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [class java.util.zip.ZipException] } ==close.state ==>{ StorageServiceClientView :  close.behaviorINVARIANT & close.retval instanceof [void] & finish.behaviorINVARIANT & finish.retval instanceof [class java.io.IOException] & hashCode.behaviorINVARIANT & putNextEntry.behaviorINVARIANT & putNextEntry.retval instanceof [class java.io.IOException] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [class java.io.IOException] }
2015-11-17 13:30:22,881 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:22,881 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:22,882 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:22,882 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:22,885 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:22,885 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:22,885 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:22,885 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:22,885 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close.behaviorVARIANT & close.retval instanceof [void] & finish.behaviorINVARIANT & finish.retval instanceof [void] & hashCode.behaviorINVARIANT & putNextEntry.behaviorVARIANT & putNextEntry.retval instanceof [void] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [class java.util.zip.ZipException] } ==finish.state ==>{ StorageServiceClientView :  close.behaviorVARIANT & close.retval instanceof [void] & finish.behaviorINVARIANT & finish.retval instanceof [void] & hashCode.behaviorINVARIANT & putNextEntry.behaviorVARIANT & putNextEntry.retval instanceof [void] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [class java.util.zip.ZipException] }
2015-11-17 13:30:22,885 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:22,886 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:22,887 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:22,887 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:22,888 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:22,888 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:22,888 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:22,888 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:22,889 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close.behaviorVARIANT & close.retval instanceof [void] & finish.behaviorINVARIANT & finish.retval instanceof [void] & hashCode.behaviorINVARIANT & putNextEntry.behaviorVARIANT & putNextEntry.retval instanceof [void] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [class java.util.zip.ZipException] } ==hashCode.state ==>{ StorageServiceClientView :  close.behaviorVARIANT & close.retval instanceof [void] & finish.behaviorINVARIANT & finish.retval instanceof [void] & hashCode.behaviorINVARIANT & putNextEntry.behaviorVARIANT & putNextEntry.retval instanceof [void] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [class java.util.zip.ZipException] }
2015-11-17 13:30:22,890 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:22,891 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:22,891 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:22,891 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:22,892 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:22,892 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:22,892 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:22,892 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:22,892 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:22,892 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:22,892 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval == null }
2015-11-17 13:30:22,892 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval == null }
2015-11-17 13:30:22,892 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close.behaviorVARIANT & close.retval instanceof [void] & finish.behaviorINVARIANT & finish.retval instanceof [void] & hashCode.behaviorINVARIANT & putNextEntry.behaviorVARIANT & putNextEntry.retval instanceof [void] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [class java.util.zip.ZipException] } ==putNextEntry.state ==>{ StorageServiceClientView :  close.behaviorVARIANT & close.retval instanceof [void] & finish.behaviorVARIANT & finish.retval instanceof [void] & hashCode.behaviorINVARIANT & putNextEntry.behaviorVARIANT & putNextEntry.retval instanceof [class java.util.zip.ZipException, void] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [void] }
2015-11-17 13:30:22,895 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:22,896 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:22,896 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:22,897 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:22,899 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:22,899 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:22,899 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:22,899 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:22,900 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close.behaviorVARIANT & close.retval instanceof [void] & finish.behaviorINVARIANT & finish.retval instanceof [void] & hashCode.behaviorINVARIANT & putNextEntry.behaviorVARIANT & putNextEntry.retval instanceof [void] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [class java.util.zip.ZipException] } ==write.state ==>{ StorageServiceClientView :  close.behaviorVARIANT & close.retval instanceof [void] & finish.behaviorINVARIANT & finish.retval instanceof [void] & hashCode.behaviorINVARIANT & putNextEntry.behaviorVARIANT & putNextEntry.retval instanceof [void] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [class java.util.zip.ZipException] }
2015-11-17 13:30:22,902 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:22,902 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:22,902 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:22,902 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:22,902 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:22,902 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:22,902 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval == null }
2015-11-17 13:30:22,902 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval == null }
2015-11-17 13:30:22,903 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:22,903 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:22,904 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close.behaviorVARIANT & close.retval instanceof [void] & finish.behaviorVARIANT & finish.retval instanceof [void] & hashCode.behaviorINVARIANT & putNextEntry.behaviorVARIANT & putNextEntry.retval instanceof [class java.util.zip.ZipException, void] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [void] } ==close.state ==>{ StorageServiceClientView :  close.behaviorINVARIANT & close.retval instanceof [void] & finish.behaviorINVARIANT & finish.retval instanceof [class java.io.IOException] & hashCode.behaviorINVARIANT & putNextEntry.behaviorINVARIANT & putNextEntry.retval instanceof [class java.io.IOException] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [class java.io.IOException] }
2015-11-17 13:30:22,912 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:22,912 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:22,913 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:22,913 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:22,913 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:22,913 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:22,913 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval == null }
2015-11-17 13:30:22,913 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval == null }
2015-11-17 13:30:22,913 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:22,913 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:22,913 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:22,914 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:22,914 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:22,914 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:22,914 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval == null }
2015-11-17 13:30:22,914 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval == null }
2015-11-17 13:30:22,914 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close.behaviorVARIANT & close.retval instanceof [void] & finish.behaviorVARIANT & finish.retval instanceof [void] & hashCode.behaviorINVARIANT & putNextEntry.behaviorVARIANT & putNextEntry.retval instanceof [class java.util.zip.ZipException, void] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [void] } ==hashCode.state ==>{ StorageServiceClientView :  close.behaviorVARIANT & close.retval instanceof [void] & finish.behaviorVARIANT & finish.retval instanceof [void] & hashCode.behaviorINVARIANT & putNextEntry.behaviorVARIANT & putNextEntry.retval instanceof [class java.util.zip.ZipException, void] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [void] }
2015-11-17 13:30:22,915 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:22,915 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:22,917 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:22,917 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:22,917 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:22,917 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:22,917 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval == null }
2015-11-17 13:30:22,917 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval == null }
2015-11-17 13:30:22,917 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:22,918 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:22,918 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:22,918 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:22,918 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:22,918 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:22,918 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval == null }
2015-11-17 13:30:22,918 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval == null }
2015-11-17 13:30:22,918 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close.behaviorVARIANT & close.retval instanceof [void] & finish.behaviorVARIANT & finish.retval instanceof [void] & hashCode.behaviorINVARIANT & putNextEntry.behaviorVARIANT & putNextEntry.retval instanceof [class java.util.zip.ZipException, void] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [void] } ==write.state ==>{ StorageServiceClientView :  close.behaviorVARIANT & close.retval instanceof [void] & finish.behaviorVARIANT & finish.retval instanceof [void] & hashCode.behaviorINVARIANT & putNextEntry.behaviorVARIANT & putNextEntry.retval instanceof [class java.util.zip.ZipException, void] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [void] }
2015-11-17 13:30:22,919 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:22,919 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:22,919 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:22,919 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:22,919 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close.behaviorINVARIANT & close.retval instanceof [void] & finish.behaviorINVARIANT & finish.retval instanceof [class java.io.IOException] & hashCode.behaviorINVARIANT & putNextEntry.behaviorINVARIANT & putNextEntry.retval instanceof [class java.io.IOException] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [class java.io.IOException] } ==close.state ==>{ StorageServiceClientView :  close.behaviorINVARIANT & close.retval instanceof [void] & finish.behaviorINVARIANT & finish.retval instanceof [class java.io.IOException] & hashCode.behaviorINVARIANT & putNextEntry.behaviorINVARIANT & putNextEntry.retval instanceof [class java.io.IOException] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [class java.io.IOException] }
2015-11-17 13:30:22,920 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:22,920 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:22,920 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:22,920 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:22,920 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close.behaviorINVARIANT & close.retval instanceof [void] & finish.behaviorINVARIANT & finish.retval instanceof [class java.io.IOException] & hashCode.behaviorINVARIANT & putNextEntry.behaviorINVARIANT & putNextEntry.retval instanceof [class java.io.IOException] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [class java.io.IOException] } ==finish.state ==>{ StorageServiceClientView :  close.behaviorINVARIANT & close.retval instanceof [void] & finish.behaviorINVARIANT & finish.retval instanceof [class java.io.IOException] & hashCode.behaviorINVARIANT & putNextEntry.behaviorINVARIANT & putNextEntry.retval instanceof [class java.io.IOException] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [class java.io.IOException] }
2015-11-17 13:30:22,921 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:22,921 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:22,921 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:22,921 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:22,921 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close.behaviorINVARIANT & close.retval instanceof [void] & finish.behaviorINVARIANT & finish.retval instanceof [class java.io.IOException] & hashCode.behaviorINVARIANT & putNextEntry.behaviorINVARIANT & putNextEntry.retval instanceof [class java.io.IOException] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [class java.io.IOException] } ==hashCode.state ==>{ StorageServiceClientView :  close.behaviorINVARIANT & close.retval instanceof [void] & finish.behaviorINVARIANT & finish.retval instanceof [class java.io.IOException] & hashCode.behaviorINVARIANT & putNextEntry.behaviorINVARIANT & putNextEntry.retval instanceof [class java.io.IOException] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [class java.io.IOException] }
2015-11-17 13:30:22,922 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:22,922 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:22,922 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:22,922 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:22,922 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close.behaviorINVARIANT & close.retval instanceof [void] & finish.behaviorINVARIANT & finish.retval instanceof [class java.io.IOException] & hashCode.behaviorINVARIANT & putNextEntry.behaviorINVARIANT & putNextEntry.retval instanceof [class java.io.IOException] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [class java.io.IOException] } ==putNextEntry.state ==>{ StorageServiceClientView :  close.behaviorINVARIANT & close.retval instanceof [void] & finish.behaviorINVARIANT & finish.retval instanceof [class java.io.IOException] & hashCode.behaviorINVARIANT & putNextEntry.behaviorINVARIANT & putNextEntry.retval instanceof [class java.io.IOException] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [class java.io.IOException] }
2015-11-17 13:30:22,923 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:22,923 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:22,923 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:22,923 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:22,923 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close.behaviorINVARIANT & close.retval instanceof [void] & finish.behaviorINVARIANT & finish.retval instanceof [class java.io.IOException] & hashCode.behaviorINVARIANT & putNextEntry.behaviorINVARIANT & putNextEntry.retval instanceof [class java.io.IOException] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [class java.io.IOException] } ==putNextEntry.state ==>{ StorageServiceClientView :  close.behaviorINVARIANT & close.retval instanceof [void] & finish.behaviorINVARIANT & finish.retval instanceof [class java.io.IOException] & hashCode.behaviorINVARIANT & putNextEntry.behaviorINVARIANT & putNextEntry.retval instanceof [class java.io.IOException] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [class java.io.IOException] }
2015-11-17 13:30:22,924 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:22,924 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:22,924 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:22,924 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-11-17 13:30:22,924 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close.behaviorINVARIANT & close.retval instanceof [void] & finish.behaviorINVARIANT & finish.retval instanceof [class java.io.IOException] & hashCode.behaviorINVARIANT & putNextEntry.behaviorINVARIANT & putNextEntry.retval instanceof [class java.io.IOException] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [class java.io.IOException] } ==write.state ==>{ StorageServiceClientView :  close.behaviorINVARIANT & close.retval instanceof [void] & finish.behaviorINVARIANT & finish.retval instanceof [class java.io.IOException] & hashCode.behaviorINVARIANT & putNextEntry.behaviorINVARIANT & putNextEntry.retval instanceof [class java.io.IOException] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [class java.io.IOException] }
2015-11-17 13:30:22,925 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:22,925 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-11-17 13:30:22,925 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:22,925 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-11-17 13:30:22,925 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView : null }  ==StorageServiceClientView.state ==>{ StorageServiceClientView :  close.behaviorVARIANT & close.retval instanceof [void] & finish.behaviorINVARIANT & finish.retval instanceof [void] & hashCode.behaviorINVARIANT & putNextEntry.behaviorVARIANT & putNextEntry.retval instanceof [void] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [class java.util.zip.ZipException] }
